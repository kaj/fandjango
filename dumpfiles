#!/usr/bin/env python
# -*- coding: utf-8 -*-
from django.core.management import setup_environ
import settings # Assumed to be in the same directory.
setup_environ(settings)

from libris.models import *
from xml.dom import minidom as dom

def xmlEpisode(doc, episode):
    elem = doc.createElement
    text = doc.createTextNode
    i = elem('serie')
    i.appendChild(elem('title')).appendChild(text(episode.title.title))
    if episode.episode:
        i.appendChild(elem('episode')).appendChild(text(episode.episode))
    if episode.part_no or episode.part_name:
        px = i.appendChild(elem('part'))
        if episode.part_no:
            px.setAttribute('no', unicode(episode.part_no))
        if episode.part_name:
            px.appendChild(text(episode.part_name))
    if episode.teaser:
        i.appendChild(elem('teaser')).appendChild(text(episode.teaser))
    
    if episode.ref_keys.count():
        ref = i.appendChild(elem('ref'))
        for r in episode.ref_keys.all():
            ref.appendChild(elem('key')).appendChild(text(r.title))

    for p in episode.creativepart_set.all():
        px = i.appendChild(elem('by'))
        px.appendChild(text(unicode(p.alias or p.creator)))
        if p.role:
            px.setAttribute('role', p.role)
    return i

def xmlArticle(doc, article):
    elem = doc.createElement
    text = doc.createTextNode
    i = elem('text')
    i.appendChild(elem('title')).appendChild(text(article.title))
    if article.subtitle:
        i.appendChild(elem('subtitle')).appendChild(text(article.subtitle))
    if article.ref_keys.count():
        ref = i.appendChild(elem('ref'))
        for r in article.ref_keys.all():
            ref.appendChild(elem('key')).appendChild(text(r.title))
    return i

d=dom.Document()
libris = d.appendChild(d.createElement('libris'))
info = libris.appendChild(d.createElement('info'))
info.appendChild(d.createElement('title')).appendChild(d.createTextNode('Fantomen'))
info.appendChild(d.createElement('year')).appendChild(d.createTextNode('1994'))


for issue in Issue.objects.filter(year=1994):
    xmli = libris.appendChild(d.createElement('issue'))
    xmli.setAttribute('nr', str(issue.number))
    for pub in Publication.objects.filter(issue=issue):
        if pub.episode: xmli.appendChild(xmlEpisode(d, pub.episode))
        if pub.article: xmli.appendChild(xmlArticle(d, pub.article))

print d.toxml(encoding='utf-8')
